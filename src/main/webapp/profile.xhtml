<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      lang="es" xml:lang="es">
<h:head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Mi Perfil</title>
    <style type="text/css">
        /* ... (todos los estilos CSS se mantienen igual) ... */
    </style>
</h:head>

<h:body>
    <div class="container profile-container">
        <div class="profile-header">
            <div class="buttons-container">
                <h:graphicImage library="images" name="profile/#{profileController.usuario.fotoPerfil}"
                                alt="Avatar" styleClass="avatar-img"
                                rendered="#{not empty profileController.usuario.fotoPerfil}" />
                <h:graphicImage library="images" name="profile/default-avatar.png"
                                alt="Avatar" styleClass="avatar-img"
                                rendered="#{empty profileController.usuario.fotoPerfil}" />

                <div class="buttons-container">
                    <h:button value="Regresar" outcome="home" styleClass="regresar-btn" />
                </div>

                <h:commandButton styleClass="edit-avatar-btn" value="✏️"
                                 action="#{profileController.mostrarDialogoAvatar}" />
            </div>

            <h1>#{profileController.usuario.nombreCompleto}</h1>
            <p class="profile-email">#{profileController.usuario.email}</p>

            <!-- Objetivo del usuario -->
            <div class="user-goal-badge">
                <span class="goal-icon">#{profileController.usuario.objetivo.emoji}</span>
                <span class="goal-text">#{profileController.usuario.objetivo.descripcion}</span>
            </div>
        </div>

        <div class="profile-section">
            <h2>Datos Personales</h2>
            <div class="profile-data">
                <div class="data-item">
                    <span class="data-label">Edad:</span>
                    <span class="data-value">#{profileController.usuario.edad} años</span>
                </div>
                <div class="data-item">
                    <span class="data-label">Altura:</span>
                    <span class="data-value">#{profileController.usuario.altura} cm</span>
                </div>
                <div class="data-item">
                    <span class="data-label">Peso:</span>
                    <span class="data-value">#{profileController.usuario.peso} kg</span>
                </div>
                <div class="data-item">
                    <span class="data-label">IMC:</span>
                    <span class="data-value">#{profileController.usuario.imc}
                        <span class="imc-status">(#{profileController.usuario.estadoIMC})</span>
                    </span>
                </div>
            </div>
        </div>

        <div class="profile-section">
            <h2>Mi Progreso Hoy</h2>
            <div class="charts-container">
                <div class="chart-wrapper">
                    <canvas id="caloriesChart"></canvas>
                    <div class="chart-info">
                        <h3>Calorías</h3>
                        <p class="chart-progress">#{profileController.progresoHoy.caloriasConsumidas} /
                            #{profileController.usuario.metaDiaria.calorias} kcal</p>
                    </div>
                </div>
                <div class="chart-wrapper">
                    <canvas id="proteinChart"></canvas>
                    <div class="chart-info">
                        <h3>Proteínas</h3>
                        <p class="chart-progress">#{profileController.progresoHoy.proteinasConsumidas} /
                            #{profileController.usuario.metaDiaria.proteinas} g</p>
                    </div>
                </div>
                <div class="chart-wrapper">
                    <canvas id="carbsChart"></canvas>
                    <div class="chart-info">
                        <h3>Carbohidratos</h3>
                        <p class="chart-progress">#{profileController.progresoHoy.carbohidratosConsumidos} /
                            #{profileController.usuario.metaDiaria.carbohidratos} g</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="profile-section">
            <h2>Objetivos Diarios</h2>
            <div class="goals-container">
                <div class="goal-card">
                    <h3>Calorías</h3>
                    <p>#{profileController.usuario.metaDiaria.calorias} kcal</p>
                </div>
                <div class="goal-card">
                    <h3>Proteínas</h3>
                    <p>#{profileController.usuario.metaDiaria.proteinas} g</p>
                </div>
                <div class="goal-card">
                    <h3>Carbohidratos</h3>
                    <p>#{profileController.usuario.metaDiaria.carbohidratos} g</p>
                </div>
            </div>
        </div>

        <div class="buttons-container">
            <h:button value="Editar Perfil" outcome="selecciona-objetivo"
                      styleClass="edit-profile-btn" />
        </div>
    </div>

    <!-- Diálogo para cambiar avatar -->
    <h:form rendered="#{profileController.mostrarDialogo}">
        <div class="modal">
            <div class="modal-content">
                <h:commandButton value="×" styleClass="close-btn"
                                 action="#{profileController.ocultarDialogo}" />
                <h2>Cambiar Foto de Perfil</h2>
                <h:inputFile value="#{profileController.nuevaFoto}" />
                <h:commandButton value="Subir" action="#{profileController.cambiarFoto}"
                                 styleClass="auth-button" />
            </div>
        </div>
    </h:form>

    <h:outputScript name="js/chart.min.js" target="body" />
    <script type="text/javascript">
        //<![CDATA[
        // Configuración de los gráficos con datos dinámicos
        const initCharts = function() {
            const caloriesCtx = document.getElementById('caloriesChart').getContext('2d');
            const proteinCtx = document.getElementById('proteinChart').getContext('2d');
            const carbsCtx = document.getElementById('carbsChart').getContext('2d');

            const chartOptions = {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: { beginAtZero: true, max: 100, display: false, grid: { display: false } },
                    x: { grid: { display: false }, ticks: { display: false } }
                },
                plugins: { legend: { display: false }, tooltip: { enabled: false } },
                barPercentage: 0.4,
                borderRadius: 8
            };

            // Gráficos con datos dinámicos
            new Chart(caloriesCtx, {
                type: 'bar',
                data: {
                    labels: ['Consumido', 'Meta'],
                    datasets: [{
                        data: [#{profileController.porcentajeCalorias}, 100],
            backgroundColor: ['#3498db', '#ecf0f1'],
                borderWidth: 0
        }]
        },
            options: chartOptions
        });

            new Chart(proteinCtx, {
                type: 'bar',
                data: {
                    labels: ['Consumido', 'Meta'],
                    datasets: [{
                        data: [#{profileController.porcentajeProteinas}, 100],
            backgroundColor: ['#2ecc71', '#ecf0f1'],
                borderWidth: 0
        }]
        },
            options: chartOptions
        });

            new Chart(carbsCtx, {
                type: 'bar',
                data: {
                    labels: ['Consumido', 'Meta'],
                    datasets: [{
                        data: [#{profileController.porcentajeCarbohidratos}, 100],
            backgroundColor: ['#e74c3c', '#ecf0f1'],
                borderWidth: 0
        }]
        },
            options: chartOptions
        });
        };

        // Inicializar gráficos cuando el documento esté listo
        if (window.addEventListener) {
            window.addEventListener('load', initCharts, false);
        } else if (window.attachEvent) {
            window.attachEvent('onload', initCharts);
        }
        //]]>
    </script>
</h:body>
</html>